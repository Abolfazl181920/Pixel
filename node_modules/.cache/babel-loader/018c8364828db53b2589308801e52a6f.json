{"ast":null,"code":"var _jsxFileName = \"/home/abolfazl/create-react/pixel/src/components/Editor.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { CirclePicker } from 'react-color';\nimport '../styles/editor.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Editor = () => {\n  _s();\n\n  const [panelWidth, setPanelWidth] = useState(16);\n  const [panelHeight, setPanelHeight] = useState(16);\n  const [hideOptions, setHideOptions] = useState(false);\n  const [hideDrawingPanel, setHideDrawingPanel] = useState(true);\n  const [buttonText, setButtonText] = useState(\"Start Drawing\");\n  const [selectedColor, setSelectedColor] = useState(\"#f44336\");\n\n  const initializeDrawingPanel = () => {\n    setHideOptions(!hideOptions);\n    setHideDrawingPanel(!hideDrawingPanel);\n    buttonText === \"Start Drawing\" ? setButtonText(\"reset\") : setButtonText(\"Start Drawing\");\n  };\n\n  const changeColor = color => {\n    setSelectedColor(color.hex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pixel Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), hideDrawingPanel && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Panel Demisions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 35\n    }, this), hideDrawingPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"panelInput\",\n          defaultValue: panelWidth,\n          onChange: e => {\n            setPanelWidth(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Width\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"panelInput\",\n          defaultValue: panelHeight,\n          onChange: e => {\n            setPanelHeight(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Height\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: initializeDrawingPanel,\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), hideOptions, /*#__PURE__*/_jsxDEV(CirclePicker, {\n      color: selectedColor,\n      onChangeComplete: changeColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Editor, \"zunydw95ldlypUUi5MWvrb6R0Uc=\");\n\n_c = Editor;\nexport default Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/home/abolfazl/create-react/pixel/src/components/Editor.js"],"names":["useState","CirclePicker","Editor","panelWidth","setPanelWidth","panelHeight","setPanelHeight","hideOptions","setHideOptions","hideDrawingPanel","setHideDrawingPanel","buttonText","setButtonText","selectedColor","setSelectedColor","initializeDrawingPanel","changeColor","color","hex","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,uBAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAEK,WAAF,EAAeC,cAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAEO,WAAF,EAAeC,cAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAES,gBAAF,EAAoBC,mBAApB,IAA4CV,QAAQ,CAAC,IAAD,CAA1D;AACA,QAAM,CAAEW,UAAF,EAAcC,aAAd,IAAgCZ,QAAQ,CAAC,eAAD,CAA9C;AACA,QAAM,CAAEa,aAAF,EAAiBC,gBAAjB,IAAsCd,QAAQ,CAAC,SAAD,CAApD;;AAEA,QAAMe,sBAAsB,GAAG,MAAM;AACjCP,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACAG,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AAEAE,IAAAA,UAAU,KAAK,eAAf,GAAiCC,aAAa,CAAC,OAAD,CAA9C,GAA0DA,aAAa,CAAC,eAAD,CAAvE;AACH,GALD;;AAOA,QAAMI,WAAW,GAAIC,KAAD,IAAW;AAC3BH,IAAAA,gBAAgB,CAACG,KAAK,CAACC,GAAP,CAAhB;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,EAAE,EAAC,QAAR;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMT,gBAAgB,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF1B,EAGMA,gBAAgB,iBACd;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,SAAS,EAAC,YAFd;AAGI,UAAA,YAAY,EAAEN,UAHlB;AAII,UAAA,QAAQ,EAAGgB,CAAD,IAAO;AAACf,YAAAA,aAAa,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AAA8B;AAJpD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,QADT;AAEI,UAAA,SAAS,EAAC,YAFd;AAGI,UAAA,YAAY,EAAEhB,WAHlB;AAII,UAAA,QAAQ,EAAGc,CAAD,IAAO;AAACb,YAAAA,cAAc,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AAA+B;AAJrD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR,eAyBI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEN,sBAApC;AAAA,gBACKJ;AADL;AAAA;AAAA;AAAA;AAAA,YAzBJ,EA6BQJ,WA7BR,eA+BI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEM,aADX;AAEI,MAAA,gBAAgB,EAAEG;AAFtB;AAAA;AAAA;AAAA;AAAA,YA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CA1DD;;GAAMd,M;;KAAAA,M;AA4DN,eAAeA,MAAf","sourcesContent":["import { useState } from 'react';\n\nimport { CirclePicker } from 'react-color'\nimport '../styles/editor.scss';\n\nconst Editor = () => {\n\n    const [ panelWidth, setPanelWidth ] = useState(16);\n    const [ panelHeight, setPanelHeight ] = useState(16);\n    const [ hideOptions, setHideOptions ] = useState(false);\n    const [ hideDrawingPanel, setHideDrawingPanel ] = useState(true);\n    const [ buttonText, setButtonText ] = useState(\"Start Drawing\");\n    const [ selectedColor, setSelectedColor ] = useState(\"#f44336\");\n\n    const initializeDrawingPanel = () => {\n        setHideOptions(!hideOptions);\n        setHideDrawingPanel(!hideDrawingPanel);\n\n        buttonText === \"Start Drawing\" ? setButtonText(\"reset\") : setButtonText(\"Start Drawing\");\n    }\n\n    const changeColor = (color) => {\n        setSelectedColor(color.hex);\n    }\n\n    return (\n        <div id=\"editor\">\n            <h1>Pixel Editor</h1>\n            { hideDrawingPanel && <h2>Enter Panel Demisions</h2> }\n            { hideDrawingPanel && (\n                <div id=\"options\">\n                    <div className=\"option\">\n                        <input\n                            type=\"number\"\n                            className=\"panelInput\"\n                            defaultValue={panelWidth}\n                            onChange={(e) => {setPanelWidth(e.target.value)}}\n                        />\n                        <span>Width</span>\n                    </div>\n                    <div className=\"option\">\n                        <input\n                            type=\"number\"\n                            className=\"panelInput\"\n                            defaultValue={panelHeight}\n                            onChange={(e) => {setPanelHeight(e.target.value)}}\n                        />\n                        <span>Height</span>\n                    </div>\n                </div>\n            ) }\n            <button className=\"button\" onClick={initializeDrawingPanel}>\n                {buttonText}\n            </button>\n            {\n                hideOptions \n            }\n            <CirclePicker\n                color={selectedColor}\n                onChangeComplete={changeColor}\n            />\n        </div>\n    )\n}\n\nexport default Editor;"]},"metadata":{},"sourceType":"module"}